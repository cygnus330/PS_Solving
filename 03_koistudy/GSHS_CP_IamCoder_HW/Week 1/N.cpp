#include <bits/stdc++.h>#define all(v) (v).begin(), (v).end()#define endl "\n"using namespace std;typedef long long ll;typedef pair<int, int> pii;void fastio(){    ios_base::sync_with_stdio(false);    cin.tie(NULL);    cout.tie(NULL);}const int INF = 1e9;int n, m, ans = INF;vector<pii> L;int D[11][11];void f(){    int dist[11][11];    memcpy(*dist, *D, sizeof(D));    for(int j=1; j<=n; j++)        for(int i=1; i<=n; i++)            for(int k=1; k<=n; k++)                dist[i][k] = min(dist[i][k], dist[i][j] + dist[j][k]);    ans = min(ans, dist[1][n]);}int main(){    fastio();    cin >> n >> m;    if(n == 1)    {        cout << 0 << endl;        return 0;    }    fill(*D, *D + 11*11, INF);    for(int i=0; i<m; i++)    {        int a, b, c;        cin >> a >> b >> c;        if(a == b)            continue;        L.push_back({a, b});        D[a][b] = min(c, D[a][b]);        D[b][a] = D[a][b];    }        for(int i=0; i<m; i++)    {        int x = L[i].first, y = L[i].second;        int ori = D[x][y];        D[x][y] >>= 1;        D[y][x] >>= 1;        f();        D[x][y] = ori; D[y][x] = ori;    }    if(ans < INF)        cout << ans << endl;    else        cout << -1 << endl;        return 0;}